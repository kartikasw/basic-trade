// Code generated by MockGen. DO NOT EDIT.
// Source: basic-trade/internal/service (interfaces: VariantService)

// Package mockService is a generated GoMock package.
package mockService

import (
	entity "basic-trade/internal/entity"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockVariantService is a mock of VariantService interface.
type MockVariantService struct {
	ctrl     *gomock.Controller
	recorder *MockVariantServiceMockRecorder
}

// MockVariantServiceMockRecorder is the mock recorder for MockVariantService.
type MockVariantServiceMockRecorder struct {
	mock *MockVariantService
}

// NewMockVariantService creates a new mock instance.
func NewMockVariantService(ctrl *gomock.Controller) *MockVariantService {
	mock := &MockVariantService{ctrl: ctrl}
	mock.recorder = &MockVariantServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVariantService) EXPECT() *MockVariantServiceMockRecorder {
	return m.recorder
}

// CreateVariant mocks base method.
func (m *MockVariantService) CreateVariant(arg0 context.Context, arg1 entity.Variant, arg2 uuid.UUID) (entity.Variant, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateVariant", arg0, arg1, arg2)
	ret0, _ := ret[0].(entity.Variant)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateVariant indicates an expected call of CreateVariant.
func (mr *MockVariantServiceMockRecorder) CreateVariant(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateVariant", reflect.TypeOf((*MockVariantService)(nil).CreateVariant), arg0, arg1, arg2)
}

// DeleteVariant mocks base method.
func (m *MockVariantService) DeleteVariant(arg0 context.Context, arg1 uuid.UUID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteVariant", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteVariant indicates an expected call of DeleteVariant.
func (mr *MockVariantServiceMockRecorder) DeleteVariant(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteVariant", reflect.TypeOf((*MockVariantService)(nil).DeleteVariant), arg0, arg1)
}

// GetAllVariants mocks base method.
func (m *MockVariantService) GetAllVariants(arg0 context.Context, arg1, arg2 int32) ([]entity.VariantViewList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllVariants", arg0, arg1, arg2)
	ret0, _ := ret[0].([]entity.VariantViewList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllVariants indicates an expected call of GetAllVariants.
func (mr *MockVariantServiceMockRecorder) GetAllVariants(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllVariants", reflect.TypeOf((*MockVariantService)(nil).GetAllVariants), arg0, arg1, arg2)
}

// GetVariant mocks base method.
func (m *MockVariantService) GetVariant(arg0 context.Context, arg1 uuid.UUID) (entity.Variant, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVariant", arg0, arg1)
	ret0, _ := ret[0].(entity.Variant)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetVariant indicates an expected call of GetVariant.
func (mr *MockVariantServiceMockRecorder) GetVariant(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVariant", reflect.TypeOf((*MockVariantService)(nil).GetVariant), arg0, arg1)
}

// SearchVariants mocks base method.
func (m *MockVariantService) SearchVariants(arg0 context.Context, arg1 string, arg2, arg3 int32) ([]entity.VariantViewList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchVariants", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].([]entity.VariantViewList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchVariants indicates an expected call of SearchVariants.
func (mr *MockVariantServiceMockRecorder) SearchVariants(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchVariants", reflect.TypeOf((*MockVariantService)(nil).SearchVariants), arg0, arg1, arg2, arg3)
}

// UpdateVariant mocks base method.
func (m *MockVariantService) UpdateVariant(arg0 context.Context, arg1 entity.Variant) (entity.Variant, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateVariant", arg0, arg1)
	ret0, _ := ret[0].(entity.Variant)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateVariant indicates an expected call of UpdateVariant.
func (mr *MockVariantServiceMockRecorder) UpdateVariant(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateVariant", reflect.TypeOf((*MockVariantService)(nil).UpdateVariant), arg0, arg1)
}
